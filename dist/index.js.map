{"version":3,"sources":["webpack://LSFPlugin/webpack/universalModuleDefinition","webpack://LSFPlugin/webpack/bootstrap","webpack://LSFPlugin/./index.ts","webpack://LSFPlugin/./src/dao/index.ts","webpack://LSFPlugin/./src/index.ts","webpack://LSFPlugin/./src/service/index.ts","webpack://LSFPlugin/./src/store/cart-bulk.thunks.ts","webpack://LSFPlugin/external \"@grupakmk/libstorefront\"","webpack://LSFPlugin/external \"inversify\"","webpack://LSFPlugin/external \"lodash/partition\""],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"LSFPlugin\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LSFPlugin\"] = factory();\n\telse\n\t\troot[\"LSFPlugin\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.ts\");\n","export { CartBulkActionsPlugin } from './src/index';\nexport { CartBulkService } from './src/service/index';\nexport { CartBulkDao } from './src/dao/index';\n","import { TaskQueue, Task, URLTransform } from \"@grupakmk/libstorefront\";\nimport { inject, injectable } from \"inversify\";\n\n@injectable()\nexport class CartBulkDao {\n\n    public addOrUpdate (cartId, cartItems): Promise<Task> {\n        return this.taskQueue.execute({\n            url: URLTransform.getAbsoluteApiUrl('/api/vendor/cart-bulk/' + cartId + '?token={{token}}&storeCode={{storeCode}}'),\n            payload: {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                mode: 'cors',\n                body: JSON.stringify(cartItems)\n            },\n            silent: true\n        });\n    }\n\n    public deleteOrClear (cartId, cartItemsIds): Promise<Task> {\n        return this.taskQueue.execute({\n            url: URLTransform.getAbsoluteApiUrl('/api/vendor/cart-bulk/' + cartId + '?token={{token}}&storeCode={{storeCode}}'),\n            payload: {\n                method: 'DELETE',\n                headers: { 'Content-Type': 'application/json' },\n                mode: 'cors',\n                ...(cartItemsIds && { body: JSON.stringify(cartItemsIds) })\n            },\n            silent: true\n        });\n    }\n\n    public constructor(@inject(TaskQueue) private taskQueue) {}\n}\n","import { LibStorefront } from '@grupakmk/libstorefront';\nimport { LibstorefrontPlugin } from '@grupakmk/libstorefront/dist/config/types/libstorefront-plugin';\nimport { CartBulkDao } from './dao';\nimport { CartBulkService } from './service';\n\n/**\n * Plugin provides support with bulk actions on Magento quote\n * such as bulk adding, updating or deleting cart item.\n */\nexport const CartBulkActionsPlugin = ((libstorefront: LibStorefront) => {\n    libstorefront.getIOCContainer().bind<CartBulkDao>(CartBulkDao).to(CartBulkDao);\n    libstorefront.getIOCContainer().bind<CartBulkService>(CartBulkService).to(CartBulkService);\n}) as LibstorefrontPlugin;\n","import { injectable, inject } from 'inversify';\nimport { AbstractStore, CartItem, LibstorefrontInnerState, Product } from '@grupakmk/libstorefront';\nimport { CartBulkThunks } from '../store/cart-bulk.thunks';\n\n@injectable()\nexport class CartBulkService {\n\n    /**\n     * Adds multiple products to the cart at once\n     * @param {Product[]} items\n     * @returns {Promise<{ added: { sku: string, qty: string, item_id: string }, error: { sku: string, error: string } }}\n     */\n    public addBulk (items: Product[]): Promise<{ added: { sku: string, qty: string, item_id: string }, error: { sku: string, error: string } }> {\n        return this.store.dispatch(CartBulkThunks.addBulk(items));\n    }\n\n    /**\n     * Updates multiple products on the current cart at once\n     * @param {Product[]} items\n     * @returns {Promise<{ added: { sku: string, qty: string, item_id: string }, error: { sku: string, error: string } }}\n     */\n    public updateBulk (items: CartItem[]): Promise<{ added: { sku: string, qty: string, item_id: string }, error: { sku: string, error: string } }> {\n        return this.store.dispatch(CartBulkThunks.updateBulk(items));\n    }\n\n    /**\n     * Deletes multiple products from the cart or clears the cart\n     * To clear the cart entirely do not pass `items` param to the method\n     * @param {Product[]} items\n     * @returns {Promise<{ added: { sku: string, qty: string, item_id: string }, error: { sku: string, error: string } }}\n     */\n    public deleteBulk (items?: CartItem[]): Promise<CartItem[]> {\n        return this.store.dispatch(CartBulkThunks.deleteBulk(items));\n    }\n\n    public constructor(@inject(AbstractStore) private store: AbstractStore<LibstorefrontInnerState>) {}\n}\n","import {\n    CartItem,\n    IOCContainer,\n    Logger,\n    Product,\n    SyncUtils,\n    CartUtils,\n    CartActions,\n    prepareProductsToAdd,\n    AbstractStore, CartService, HttpStatus, StorageCollection, StorageCollectionKeys,\n    StorageManager\n} from '@grupakmk/libstorefront';\nimport { CartBulkDao } from \"../dao\";\nimport partition from 'lodash/partition';\n\nexport namespace CartBulkThunks {\n\n    export const addBulk = (items: Product[], overwriteQty?: boolean) => async (dispatch, getState) => {\n        try {\n            if (!Array.isArray(items)) { throw new Error('Invalid argument. Items must be an array'); }\n\n            CartUtils.assertShopOnline();\n            await CartUtils.assertNotLocked();\n            await dispatch(assertValidQuote());\n            await dispatch(CartActions.setActionLock(true));\n\n            const productsToSync = prepareProductsToAdd(items);\n            await dispatch(CartActions.cartAddingItem(true));\n\n            const cartToken = getState().cart.cartServerToken;\n            const preparedProducts = productsToSync\n                .map(item => SyncUtils.prepareProductBeforeAdd(item, overwriteQty))\n                .map(item => ({ ...item, quoteId: cartToken }));\n\n            const response = await IOCContainer.get(CartBulkDao).addOrUpdate(cartToken, preparedProducts);\n\n            if (response && response.code === HttpStatus.OK) {\n                const [addedProducts, erroredProducts] = partition(response.result, (el) => !el.hasOwnProperty('error'));\n\n                await dispatch(CartActions.addItems(\n                    productsToSync.map(cartItem => {\n                        return SyncUtils.mergeItem(cartItem, addedProducts.map(o => ({ ...o, quote_id: cartToken })));\n                    }).filter(Boolean)\n                ));\n                await dispatch(CartActions.setActionLock(false));\n                await dispatch(CartActions.cartAddingItem(false));\n\n                return {\n                    added: addedProducts,\n                    error: erroredProducts\n                };\n            }\n        } catch (e) {\n            Logger.warn('Cannot add bulk products', 'cart-bulk-actions-plugin', e.message);\n            await dispatch(CartActions.setActionLock(false));\n            await dispatch(CartActions.cartAddingItem(false));\n        }\n    };\n\n    export const updateBulk = (items: CartItem[]) => async (dispatch, getState) => {\n        try {\n            await dispatch(addBulk(items));\n        } catch (e) {\n            Logger.warn('Cannot update bulk products', 'cart-bulk-actions-plugin', e.message);\n        }\n    };\n\n    export const deleteBulk = (items?: CartItem[]) => async (dispatch, getState) => {\n        try {\n            if (!Array.isArray(items) && (typeof items !== 'undefined' && items !== null)) { throw new Error('Invalid argument. Items must be an array'); }\n\n            CartUtils.assertShopOnline();\n            await CartUtils.assertNotLocked();\n            await dispatch(assertValidQuote());\n            await dispatch(CartActions.setActionLock(true));\n\n            const cartToken = getState().cart.cartServerToken;\n            const itemIds = items ? items.map(({ item_id }) => item_id) : null;\n\n            const response = await IOCContainer.get(CartBulkDao).deleteOrClear(cartToken, itemIds);\n\n            if (response && response.code === HttpStatus.OK) {\n                const result = response.result;\n                if (result) {\n                    if (items) {\n                        for (let item of items) {\n                            await dispatch(CartActions.deleteItem({ product: item, removeByParentSku: false }));\n                        }\n\n                        await dispatch(CartActions.setActionLock(false));\n                        await dispatch(syncCartLocalState());\n                    } else {\n                        await dispatch(CartActions.resetCart());\n                        await dispatch(CartActions.setActionLock(false));\n                        await dispatch(syncCartLocalState());\n                    }\n                }\n            }\n\n        } catch (e) {\n            Logger.warn('Cannot delete bulk products', 'cart-bulk-actions-plugin', e.message);\n            await dispatch(CartActions.setActionLock(false));\n        }\n    };\n\n    /**\n     * Checks if quote is valid and has a valid cart server token.\n     * If not new quote will be created as user quote or guest quote.\n     */\n    export const assertValidQuote = () => async (dispatch, getState) => {\n        const store = IOCContainer.get(AbstractStore);\n        try {\n            const token = await CartUtils.observeTokenChange();\n            return token;\n        } catch (e) {\n            const user = store.getState().user.current;\n            const guestCart = !user;\n            await IOCContainer.get(CartService).createCart({ guestCart });\n        }\n    };\n\n    /**\n     * Asserts local cart state is in sync with Magento and localstorage\n     */\n    export const syncCartLocalState = () => async (dispatch, getState) => {\n        const { cart } = getState();\n        const { cartItems, cartServerToken } = cart;\n        const currentCartHash = CartUtils.calcItemsHmac(cartItems, cartServerToken);\n        await dispatch(CartActions.setSync());\n        await StorageManager.getInstance().get(StorageCollection.CART).setItem(StorageCollectionKeys.CURRENT_CART_TOKEN, cartServerToken);\n        await StorageManager.getInstance().get(StorageCollection.CART).setItem(StorageCollectionKeys.CURRENT_CART_HASH, currentCartHash);\n        await StorageManager.getInstance().get(StorageCollection.CART).setItem(StorageCollectionKeys.CURRENT_CART, cartItems);\n        await dispatch(CartActions.setItemsHash(currentCartHash));\n\n        Logger.info('Synchronization complete', 'sync');\n    };\n}\n","module.exports = require(\"@grupakmk/libstorefront\");","module.exports = require(\"inversify\");","module.exports = require(\"lodash/partition\");"],"sourceRoot":""}